2022-03-03 10:12:10,069 INFO custlogger list: [2, 4, 6, 7, 9] not existing inside the array : [[1, 2, 3, 4, 5], [6, 7, 8, 9, 10], [11, 12, 13, 14, 15], [16, 17, 18, 19, 20]] 
2022-03-03 10:12:10,069 INFO custlogger Accessing only the not a number elements: [nan nan] from original array: [ 1.  2.  3.  4.  5. nan nan]
2022-03-03 10:12:10,069 INFO custlogger Removing the not a number elements from the array, so the new array be [1. 2. 3. 4. 5.]
2022-03-03 10:12:10,069 INFO custlogger Input Array : [[[2 2 2]
  [2 2 2]]] , Output Array : [[2 2 2]
 [2 2 2]]
2022-03-03 10:12:10,070 INFO custlogger Check the element : 9 from the input array [[1 2 9 5]
 [9 5 2 3]
 [7 9 5 3]
 [9 5 1 2]]
2022-03-03 10:12:10,070 INFO custlogger The sequence appeared 4 times 
2022-03-03 10:12:10,070 INFO custlogger Comparing the arrays [[1 2 3]
 [3 2 1]] and [[2 3 4]
 [3 2 1]] 
2022-03-03 10:12:10,070 INFO custlogger Concatenate the arrays: [[ 1  2  3]
 [ 3 20  1]
 [29  3  4]
 [13  2  1]]
2022-03-03 10:12:10,070 INFO custlogger Stacking the arrays : [[[ 1  2  3]
  [29  3  4]]

 [[ 3 20  1]
  [13  2  1]]]
2022-03-03 10:12:10,070 INFO custlogger Stacking the arrays columnwise: [[ 1  2  3 29  3  4]
 [ 3 20  1 13  2  1]]
2022-03-03 10:12:10,070 INFO custlogger Stacking the arrays row wise: [[ 1  2  3]
 [ 3 20  1]
 [29  3  4]
 [13  2  1]]
2022-03-03 10:12:10,070 INFO custlogger Stcking the array depth wise: [[[ 1 29]
  [ 2  3]
  [ 3  4]]

 [[ 3 13]
  [20  2]
  [ 1  1]]]
2022-03-03 10:12:10,070 INFO custlogger After splitting the arrays: [array([[11, 21, 31]]), array([[33, 20, 13]])]
2022-03-03 10:12:10,070 INFO custlogger Iterating over the arrays: [[11 21 31]]
2022-03-03 10:12:10,071 INFO custlogger Iterating over the arrays: [[33 20 13]]
2022-03-03 10:12:10,071 INFO custlogger After the split using split_arr method: [array([[1, 2, 3],
       [4, 5, 6],
       [7, 8, 9]]), array([[10, 11, 12],
       [13, 14, 15],
       [16, 17, 18]])]
2022-03-03 10:12:10,071 INFO custlogger Split the array using hsplit method: [array([[ 1],
       [ 4],
       [ 7],
       [10],
       [13],
       [16]]), array([[ 2],
       [ 5],
       [ 8],
       [11],
       [14],
       [17]]), array([[ 3],
       [ 6],
       [ 9],
       [12],
       [15],
       [18]])]
2022-03-03 10:12:10,071 INFO custlogger The element 4 is found in (array([3, 5, 6], dtype=int64),) indices
2022-03-03 10:12:10,071 INFO custlogger The indices (array([1, 3, 5, 6], dtype=int64),) of the element can be divided by 2
2022-03-03 10:12:10,071 INFO custlogger Sort the array [6 7 8 9] and insert the element : 11 at the right position 4
2022-03-03 10:12:10,071 INFO custlogger Input array : [3 2 0 1] and after sorting [0 1 2 3] 
2022-03-03 10:12:10,072 INFO custlogger Input array [1 2 3 4 5 6 7] and filter the array and fetch only the even elements: [2, 4, 6]
2022-03-03 10:18:23,299 INFO custlogger list: [2, 4, 6, 7, 9] not existing inside the array : [[1, 2, 3, 4, 5], [6, 7, 8, 9, 10], [11, 12, 13, 14, 15], [16, 17, 18, 19, 20]] 
2022-03-03 10:18:23,300 INFO custlogger Accessing only the not a number elements: [nan nan] from original array: [ 1.  2.  3.  4.  5. nan nan]
2022-03-03 10:18:23,301 INFO custlogger Removing the not a number elements from the array, so the new array be [1. 2. 3. 4. 5.]
2022-03-03 10:18:23,301 INFO custlogger Input Array : [[[2 2 2]
  [2 2 2]]] , Output Array : [[2 2 2]
 [2 2 2]]
2022-03-03 10:18:23,302 INFO custlogger Check the element : 9 from the input array [[1 2 9 5]
 [9 5 2 3]
 [7 9 5 3]
 [9 5 1 2]]
2022-03-03 10:18:23,302 INFO custlogger The sequence appeared 4 times 
2022-03-03 10:18:23,302 INFO custlogger Comparing the arrays [[1 2 3]
 [3 2 1]] and [[2 3 4]
 [3 2 1]] 
2022-03-03 10:18:23,303 INFO custlogger Concatenate the arrays: [[ 1  2  3]
 [ 3 20  1]
 [29  3  4]
 [13  2  1]]
2022-03-03 10:18:23,303 INFO custlogger Stacking the arrays : [[[ 1  2  3]
  [29  3  4]]

 [[ 3 20  1]
  [13  2  1]]]
2022-03-03 10:18:23,303 INFO custlogger Stacking the arrays columnwise: [[ 1  2  3 29  3  4]
 [ 3 20  1 13  2  1]]
2022-03-03 10:18:23,304 INFO custlogger Stacking the arrays row wise: [[ 1  2  3]
 [ 3 20  1]
 [29  3  4]
 [13  2  1]]
2022-03-03 10:18:23,304 INFO custlogger Stcking the array depth wise: [[[ 1 29]
  [ 2  3]
  [ 3  4]]

 [[ 3 13]
  [20  2]
  [ 1  1]]]
2022-03-03 10:18:23,304 INFO custlogger After splitting the arrays: [array([[11, 21, 31]]), array([[33, 20, 13]])]
2022-03-03 10:18:23,305 INFO custlogger Iterating over the arrays: [[11 21 31]]
2022-03-03 10:18:23,305 INFO custlogger Iterating over the arrays: [[33 20 13]]
2022-03-03 10:18:23,305 INFO custlogger After the split using split_arr method: [array([[1, 2, 3],
       [4, 5, 6],
       [7, 8, 9]]), array([[10, 11, 12],
       [13, 14, 15],
       [16, 17, 18]])]
2022-03-03 10:18:23,306 INFO custlogger Split the array using hsplit method: [array([[ 1],
       [ 4],
       [ 7],
       [10],
       [13],
       [16]]), array([[ 2],
       [ 5],
       [ 8],
       [11],
       [14],
       [17]]), array([[ 3],
       [ 6],
       [ 9],
       [12],
       [15],
       [18]])]
2022-03-03 10:18:23,306 INFO custlogger The element 4 is found in (array([3, 5, 6], dtype=int64),) indices
2022-03-03 10:18:23,306 INFO custlogger The indices (array([1, 3, 5, 6], dtype=int64),) of the element can be divided by 2
2022-03-03 10:18:23,306 INFO custlogger Sort the array [6 7 8 9] and insert the element : 11 at the right position 4
2022-03-03 10:18:23,307 INFO custlogger Input array : [3 2 0 1] and after sorting [0 1 2 3] 
2022-03-03 10:18:23,307 INFO custlogger Input array [1 2 3 4 5 6 7] and filter the array and fetch only the even elements: [2, 4, 6]
